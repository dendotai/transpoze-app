name: Desktop - Build and Test

on:
  workflow_dispatch:
  push:
    branches: [ main, develop ]
    paths:
      - 'apps/desktop/**'
      - '.github/workflows/desktop/**'
  pull_request_target:
    branches: [ main ]
    paths:
      - 'apps/desktop/**'
      - '.github/workflows/desktop/**'
    types: [opened, synchronize, reopened]

jobs:
  test:
    runs-on: macos-latest
    # Only run for PRs from the same repository (not forks)
    if: github.event_name == 'push' || (github.event_name == 'pull_request_target' && github.event.pull_request.head.repo.full_name == github.repository)
    
    steps:
      - uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: bun install --frozen-lockfile

      - name: Install jq
        run: brew install jq || true

      - name: Download FFmpeg for current architecture
        run: |
          cd apps/desktop
          chmod +x ./scripts/download-ffmpeg.sh
          ARCH=$(uname -m)
          if [[ "$ARCH" == "arm64" ]]; then
            ./scripts/download-ffmpeg.sh --arch aarch64
          else
            ./scripts/download-ffmpeg.sh --arch x86_64
          fi

      - name: Lint
        run: bun run lint || true

      - name: Type check
        run: bun run type-check || true

      - name: Build desktop app
        run: bun run desktop:build

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-app
          path: |
            apps/desktop/src-tauri/target/release/bundle/macos/*.app
            apps/desktop/src-tauri/target/release/bundle/dmg/*.dmg